/*
 * File:   UART_HW.c
 * Author: Ramya
 *
 * Created on February 1, 2024, 8:30 PM
 */

#pragma config FOSC = INTRC_NOCLKOUT// Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = ON       // Power-up Timer Enable bit (PWRT enabled)
#pragma config MCLRE = ON       // RE3/MCLR pin function select bit (RE3/MCLR pin function is MCLR)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = ON        // Internal External Switchover bit (Internal/External Switchover mode is enabled)
#pragma config FCMEN = ON       // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is enabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF 
#include <xc.h>
char value[16];
void delay(int i)
{
    while(i--);
}
void lcd(char rs,char data)
{
    RE0 = rs;
    PORTD = data;
    RE1=1;
    delay(1000);
    RE1=0;
    delay(1000);
}
char UART_RX()
{
    for(int i=0;value[i]!=13;i++)
    {
        while(RCIF==0);
        value[i] = RCREG;
        RCIF=0;
        if(value[i]==13)
        {i--;}
    }
}
void UART_TX(char ch)
{
    TXREG = ch;
    while(TXIF==0);
    TXIF=0;
}
void str()
{
    char str="GOKUL";
    while(str)
    {
        UART_TX(str++);
        delay(1000);
    }
}
void str1()
{
    lcd(0,0xC0);
    for(int j=0;value[j]!=13;j++)
    {
        lcd(1,value[j]);
    }
}
void main(void) 
{
    char value1;
    PORTC=PORTD=PORTA=PORTE=TRISD=TRISE=0X00;
    ANSEL=ANSELH=0X00;
    TRISC = 0X81;
    TRISA = 0X0F;
    TXSTA = 0X24;
    RCSTA = 0X90;
    SPBRG = 25;
    lcd(0,0x38);
    lcd(0,0x0F);
    lcd(0,0x01);
    lcd(0,0x80);
    lcd(1,'A');
    while(1)
    {
        str("Gokul");
        UART_RX();
        str1();
    }
           
}
